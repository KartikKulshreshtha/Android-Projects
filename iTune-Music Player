package com.kartik.itune;

import androidx.appcompat.app.AppCompatActivity;

import android.Manifest;
import android.content.Intent;
import android.os.Bundle;
import android.os.Environment;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

import com.karumi.dexter.Dexter;
import com.karumi.dexter.PermissionToken;
import com.karumi.dexter.listener.PermissionDeniedResponse;
import com.karumi.dexter.listener.PermissionGrantedResponse;
import com.karumi.dexter.listener.PermissionRequest;
import com.karumi.dexter.listener.single.PermissionListener;

import java.io.File;
import java.nio.file.Files;
import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        ListView listView;
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        listView = findViewById(R.id.listView);
//        Dexter is used for granting permissions from user
        Dexter.withContext(this)
//                This is the permissions
                .withPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
                .withListener(new PermissionListener() {
                    @Override
                    public void onPermissionGranted(PermissionGrantedResponse permissionGrantedResponse) {
//                        This method will work when the user granted the permissions
//                        Toast.makeText(MainActivity.this, "Runtime permission accessed", Toast.LENGTH_SHORT).show();
//                        Here all the songs comes into in this MySongs arraylist
                        ArrayList<File> MySongs = fetchSongs(Environment.getExternalStorageDirectory());
//                        This Array will contains the size of the file in the form of string
                        String [] items = new String[MySongs.size()];
//                        This loop will change the last name of our file from mp3 to blank
                        for (int i = 0;i<MySongs.size();i++){
                            items[i] = MySongs.get(i).getName().replace(".mp3","");
                        }
//                        Here we create an arrayadapter
                        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(MainActivity.this, android.R.layout.simple_list_item_1,items);
                        listView.setAdapter(arrayAdapter);
                        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                            @Override
                            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
//                                This intent is used for getting on the other window
                                Intent intent = new Intent(MainActivity.this,PlayingSong.class);
//                                Here we get the current song position
                                String currentSong = listView.getItemAtPosition(position).toString();
                                intent.putExtra("songlist",MySongs);
                                intent.putExtra("currentSong",currentSong);
                                intent.putExtra("position",position);
                                startActivity(intent);

                            }

                        });


                    }

                    @Override
                    public void onPermissionDenied(PermissionDeniedResponse permissionDeniedResponse) {
//                        This method will work when the user denied the permissions
                    }

                    @Override
                    public void onPermissionRationaleShouldBeShown(PermissionRequest permissionRequest, PermissionToken permissionToken) {
//                        This method will work when the user denied the permission and again it asks
                        permissionToken.continuePermissionRequest();
                    }
                })
                .check();

    }
//    This is the code of whole database
    public ArrayList<File> fetchSongs(File file){
        ArrayList arrayList = new ArrayList();
        File [] songs = file.listFiles();
        if(songs !=null){
            for(File myFile: songs){
                if(!myFile.isHidden() && myFile.isDirectory()){
                    arrayList.addAll(fetchSongs(myFile));
                }
                else{
                    if(myFile.getName().endsWith(".mp3") && !myFile.getName().startsWith(".")){
                        arrayList.add(myFile);
                    }
                }
            }
        }
        return arrayList;
    }
}
